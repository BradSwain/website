(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{387:function(t,e,s){"use strict";s.r(e);var r=s(42),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"requestexecutor-hpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-hpp"}},[t._v("#")]),t._v(" RequestExecutor.hpp"),s("seo")],1),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/oatpp/oatpp-curl/blob/master/src/oatpp-curl/RequestExecutor.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://github.com/oatpp/oatpp-curl/issues/new?title=API%20question&body=In%20file:%20oatpp-curl/RequestExecutor.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("API: latest")]),s("br"),t._v(" "),s("code",[t._v("module: oatpp-curl")]),s("br"),t._v(" "),s("code",[t._v('#include "oatpp-curl/RequestExecutor.hpp"')])]),t._v(" "),s("h2",{attrs:{id:"requestexecutor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor"}},[t._v("#")]),t._v(" RequestExecutor")]),t._v(" "),s("p",[t._v("Curl request executor. Uses Curl to perform client to server requests. "),s("br"),t._v(" Extends "),s("RouterLink",{attrs:{to:"/api/latest/oatpp/web/client/RequestExecutor/#requestexecutor"}},[t._v("oatpp::web::client::RequestExecutor")]),t._v(".")],1),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" curl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestExecutor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("web"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("RequestExecutor "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Return Type")]),t._v(" "),s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Summary")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("[none]")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-requestexecutor"}},[t._v("RequestExecutor")])]),t._v(" "),s("td",[t._v("Constructor.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("std::shared_ptr<RequestExecutor>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-createshared"}},[t._v("createShared")])]),t._v(" "),s("td",[t._v("Create shared RequestExecutor.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("std::shared_ptr<ConnectionHandle>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-getconnection"}},[t._v("getConnection")])]),t._v(" "),s("td",[t._v("Connection reuse mechanism for curl RequestExecutor is "),s("strong",[t._v("NOT IMPLEMENTED")]),t._v(" yet."),s("br")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("oatpp::async::CoroutineStarterForResult<const std::shared_ptr<ConnectionHandle>&>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-getconnectionasync"}},[t._v("getConnectionAsync")])]),t._v(" "),s("td",[t._v("Connection reuse mechanism for curl RequestExecutor is "),s("strong",[t._v("NOT IMPLEMENTED")]),t._v(" yet."),s("br")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-invalidateconnection"}},[t._v("invalidateConnection")])]),t._v(" "),s("td",[t._v("Invalidate connection.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("std::shared_ptr<Response>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-executeonce"}},[t._v("executeOnce")])]),t._v(" "),s("td",[t._v("Execute http request. Implementation of oatpp::curl::RequestExecutor::execute method.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("oatpp::async::CoroutineStarterForResult<const std::shared_ptr<Response>&>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#requestexecutor-executeonceasync"}},[t._v("executeOnceAsync")])]),t._v(" "),s("td",[t._v("Same as "),s("a",{attrs:{href:"#requestexecutor-execute"}},[t._v("RequestExecutor::execute()")]),t._v(" but Async.")])])])]),t._v(" "),s("h3",{attrs:{id:"requestexecutor-requestexecutor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-requestexecutor"}},[t._v("#")]),t._v(" RequestExecutor::RequestExecutor")]),t._v(" "),s("p",[t._v("Constructor. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(' baseUrl - base url for requests. Ex.: "https://oatpp.io/" ')]),s("li",[s("strong",[t._v("@param")]),t._v(" verbose - "),s("code",[t._v("true")]),t._v(" to print curl logs to "),s("code",[t._v("std::cout")]),t._v(". ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RequestExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" baseUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" verbose "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"requestexecutor-createshared"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-createshared"}},[t._v("#")]),t._v(" RequestExecutor::createShared")]),t._v(" "),s("p",[t._v("Create shared RequestExecutor. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(' baseUrl - base url for requests. Ex.: "https://oatpp.io/" ')]),s("li",[s("strong",[t._v("@param")]),t._v(" verbose - "),s("code",[t._v("true")]),t._v(" to print curl logs to "),s("code",[t._v("std::cout")]),t._v(". ")]),s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("code",[t._v("std::shared_ptr")]),t._v(" to RequestExecutor. ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RequestExecutor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShared")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" baseUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" verbose "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"requestexecutor-getconnection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-getconnection"}},[t._v("#")]),t._v(" RequestExecutor::getConnection")]),t._v(" "),s("p",[t._v("Connection reuse mechanism for curl RequestExecutor is "),s("strong",[t._v("NOT IMPLEMENTED")]),t._v(" yet."),s("br"),t._v(" "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("a",{attrs:{href:"#requestexecutor-stubconnectionhandle"}},[t._v("RequestExecutor::StubConnectionHandle")]),t._v(". ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionHandle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),s("h3",{attrs:{id:"requestexecutor-getconnectionasync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-getconnectionasync"}},[t._v("#")]),t._v(" RequestExecutor::getConnectionAsync")]),t._v(" "),s("p",[t._v("Connection reuse mechanism for curl RequestExecutor is "),s("strong",[t._v("NOT IMPLEMENTED")]),t._v(" yet."),s("br"),t._v(" "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("a",{attrs:{href:"#requestexecutor-stubconnectionhandle"}},[t._v("RequestExecutor::StubConnectionHandle")]),t._v(". ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarterForResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionHandle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnectionAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),s("h3",{attrs:{id:"requestexecutor-invalidateconnection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-invalidateconnection"}},[t._v("#")]),t._v(" RequestExecutor::invalidateConnection")]),t._v(" "),s("p",[t._v("Invalidate connection. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" connectionHandle ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invalidateConnection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionHandle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connectionHandle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),s("h3",{attrs:{id:"requestexecutor-executeonce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-executeonce"}},[t._v("#")]),t._v(" RequestExecutor::executeOnce")]),t._v(" "),s("p",[t._v("Execute http request. Implementation of oatpp::curl::RequestExecutor::execute method. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(' method - method ex: ["GET", "POST", "PUT", etc.]. ')]),s("li",[s("strong",[t._v("@param")]),t._v(" path - path to resource. ")]),s("li",[s("strong",[t._v("@param")]),t._v(" userDefinedHeaders - headers map "),s("RouterLink",{attrs:{to:"/api/latest/oatpp/web/client/RequestExecutor/#requestexecutor-headers"}},[t._v("oatpp::web::client::RequestExecutor::Headers")]),t._v(". ")],1),s("li",[s("strong",[t._v("@param")]),t._v(" body - "),s("code",[t._v("std::shared_ptr")]),t._v(" to "),s("RouterLink",{attrs:{to:"/api/latest/oatpp/web/client/RequestExecutor/#requestexecutor-body"}},[t._v("oatpp::web::client::RequestExecutor::Body")]),t._v(" object. ")],1),s("li",[s("strong",[t._v("@param")]),t._v(" connectionHandle - "),s("code",[t._v("nullptr")]),t._v(". This parameter is ignored for now. ")]),s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("RouterLink",{attrs:{to:"/api/latest/oatpp/web/protocol/http/incoming/Response/#response"}},[t._v("oatpp::web::protocol::http::incoming::Response")]),t._v(". ")],1)])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Response"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" userDefinedHeaders"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionHandle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connectionHandle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),s("h3",{attrs:{id:"requestexecutor-executeonceasync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-executeonceasync"}},[t._v("#")]),t._v(" RequestExecutor::executeOnceAsync")]),t._v(" "),s("p",[t._v("Same as "),s("a",{attrs:{href:"#requestexecutor-execute"}},[t._v("RequestExecutor::execute()")]),t._v(" but Async. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(' method - method ex: ["GET", "POST", "PUT", etc.]. ')]),s("li",[s("strong",[t._v("@param")]),t._v(" path - path to resource. ")]),s("li",[s("strong",[t._v("@param")]),t._v(" headers - headers map "),s("a",{attrs:{href:"#requestexecutor-headers"}},[t._v("RequestExecutor::Headers")]),t._v(". ")]),s("li",[s("strong",[t._v("@param")]),t._v(" body - "),s("code",[t._v("std::shared_ptr")]),t._v(" to "),s("a",{attrs:{href:"#requestexecutor-body"}},[t._v("RequestExecutor::Body")]),t._v(" object. ")]),s("li",[s("strong",[t._v("@param")]),t._v(" connectionHandle - "),s("code",[t._v("nullptr")]),t._v(". This parameter is ignored for now. ")]),s("li",[s("strong",[t._v("@return")]),t._v(" - oatpp::async::CoroutineStarterForResult. ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarterForResult"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Response"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnceAsync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionHandle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connectionHandle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),s("h2",{attrs:{id:"requestexecutor-stubconnectionhandle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestexecutor-stubconnectionhandle"}},[t._v("#")]),t._v(" RequestExecutor::StubConnectionHandle")]),t._v(" "),s("p",[t._v("Connection reuse mechanism for curl RequestExecutor is "),s("strong",[t._v("NOT IMPLEMENTED")]),t._v(" yet."),s("br"),t._v(" Use dummy stub to mock the real connection and prevent the crash.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" curl "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestExecutor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("web"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("RequestExecutor "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StubConnectionHandle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ConnectionHandle "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);