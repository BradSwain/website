(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{387:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"dtos-hpp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dtos-hpp"}},[t._v("#")]),t._v(" DTOs.hpp"),e("seo")],1),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/oatpp/oatpp-consul/blob/master/src/oatpp-consul/rest/DTOs.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://github.com/oatpp/oatpp-consul/issues/new?title=API%20question&body=In%20file:%20oatpp-consul/rest/DTOs.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("API: latest")]),e("br"),t._v(" "),e("code",[t._v("module: oatpp-consul")]),e("br"),t._v(" "),e("code",[t._v('#include "oatpp-consul/rest/DTOs.hpp"')])]),t._v(" "),e("h2",{attrs:{id:"kvmetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata"}},[t._v("#")]),t._v(" KVMetadata")]),t._v(" "),e("p",[t._v("DTO object representing Consul KV Metadata Response. "),e("br"),t._v(" For More info see "),e("a",{attrs:{href:"https://www.consul.io/api/kv.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul KV Store Endpoints"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KVMetadata")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-key"}},[t._v("key")])]),t._v(" "),e("td",[t._v("Full path of the entry.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-value"}},[t._v("value")])]),t._v(" "),e("td",[t._v("Value. "),e("br"),t._v(' May contain base64 encoded value if no "raw" parameter were specified in request ex.:'),e("code",[t._v('"v1/kv/{key}?raw"')]),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-session"}},[t._v("session")])]),t._v(" "),e("td",[t._v("Session.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-createindex"}},[t._v("createIndex")])]),t._v(" "),e("td",[t._v("Internal index value that represents when the entry was created.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-modifyindex"}},[t._v("modifyIndex")])]),t._v(" "),e("td",[t._v("Last index that modified this key.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-lockindex"}},[t._v("lockIndex")])]),t._v(" "),e("td",[t._v("The number of times this key has successfully been acquired in a lock. If the lock is held, the Session key provides the session that owns the lock.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-flags"}},[t._v("flags")])]),t._v(" "),e("td",[t._v("An opaque unsigned integer that can be attached to each entry.")])])])]),t._v(" "),e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#kvmetadata-getvaluedecoded"}},[t._v("getValueDecoded")])]),t._v(" "),e("td",[t._v("Get base64 decoded "),e("a",{attrs:{href:"#kvmetadata-value"}},[t._v("KVMetadata::value")]),t._v(".")])])])]),t._v(" "),e("h3",{attrs:{id:"kvmetadata-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-key"}},[t._v("#")]),t._v(" KVMetadata::key")]),t._v(" "),e("p",[t._v("Full path of the entry.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Key"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-value"}},[t._v("#")]),t._v(" KVMetadata::value")]),t._v(" "),e("p",[t._v("Value. "),e("br"),t._v(' May contain base64 encoded value if no "raw" parameter were specified in request ex.:'),e("code",[t._v('"v1/kv/{key}?raw"')]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-session"}},[t._v("#")]),t._v(" KVMetadata::session")]),t._v(" "),e("p",[t._v("Session.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Session"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-createindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-createindex"}},[t._v("#")]),t._v(" KVMetadata::createIndex")]),t._v(" "),e("p",[t._v("Internal index value that represents when the entry was created.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CreateIndex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-modifyindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-modifyindex"}},[t._v("#")]),t._v(" KVMetadata::modifyIndex")]),t._v(" "),e("p",[t._v("Last index that modified this key.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" modifyIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ModifyIndex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-lockindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-lockindex"}},[t._v("#")]),t._v(" KVMetadata::lockIndex")]),t._v(" "),e("p",[t._v("The number of times this key has successfully been acquired in a lock. If the lock is held, the Session key provides the session that owns the lock.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lockIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LockIndex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-flags"}},[t._v("#")]),t._v(" KVMetadata::flags")]),t._v(" "),e("p",[t._v("An opaque unsigned integer that can be attached to each entry.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Flags"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"kvmetadata-getvaluedecoded"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kvmetadata-getvaluedecoded"}},[t._v("#")]),t._v(" KVMetadata::getValueDecoded")]),t._v(" "),e("p",[t._v("Get base64 decoded "),e("a",{attrs:{href:"#kvmetadata-value"}},[t._v("KVMetadata::value")]),t._v(". "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - decoded "),e("a",{attrs:{href:"#kvmetadata-value"}},[t._v("KVMetadata::value")]),t._v(". ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("String "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValueDecoded")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),e("h2",{attrs:{id:"agentcheckregisterpayload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload")]),t._v(" "),e("p",[t._v("DTO Object representing Consul Agent Register Check."),e("br"),t._v(" For more information see "),e("a",{attrs:{href:"https://www.consul.io/api/agent/check.html#register-check",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Agent Register Check"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AgentCheckRegisterPayload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields-2"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-name"}},[t._v("name")])]),t._v(" "),e("td",[t._v("Name of the check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-id"}},[t._v("id")])]),t._v(" "),e("td",[t._v("Unique ID for this check on the node.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-interval"}},[t._v("interval")])]),t._v(" "),e("td",[t._v("Frequency at which to run this check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-notes"}},[t._v("notes")])]),t._v(" "),e("td",[t._v("Arbitrary information.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-deregistercriticalserviceafter"}},[t._v("deregisterCriticalServiceAfter")])]),t._v(" "),e("td",[t._v("Specifies that checks associated with a service should deregister after this time.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("List<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-args"}},[t._v("args")])]),t._v(" "),e("td",[t._v("Command arguments to run to update the status of the check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-dockercontainerid"}},[t._v("dockerContainerID")])]),t._v(" "),e("td",[t._v("Specifies that the check is a Docker check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-grpc"}},[t._v("grpc")])]),t._v(" "),e("td",[t._v("Specifies a gRPC check's endpoint that supports the standard "),e("a",{attrs:{href:"https://github.com/grpc/grpc/blob/master/doc/health-checking.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC health checking protocol"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Boolean")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-grpcusetls"}},[t._v("grpcUseTLS")])]),t._v(" "),e("td",[t._v("Set "),e("code",[t._v("true")]),t._v("to use TLS for this gRPC health check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-http"}},[t._v("http")])]),t._v(" "),e("td",[t._v("HTTP check's endpoint. Default Method is GET.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-method"}},[t._v("method")])]),t._v(" "),e("td",[t._v("Specifies a different HTTP method to be used for an HTTP check. If not specified GET is used.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<List<String>>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-header"}},[t._v("header")])]),t._v(" "),e("td",[t._v("Set of headers that should be set for HTTP checks.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-timeout"}},[t._v("timeout")])]),t._v(" "),e("td",[t._v("Timeout for outgoing connections")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Boolean")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-tlsskipverify"}},[t._v("tlsSkipVerify")])]),t._v(" "),e("td",[t._v("Specifies if the certificate for an HTTPS check should not be verified.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-tcp"}},[t._v("tcp")])]),t._v(" "),e("td",[t._v("Specifies a TCP to connect against the value of TCP (expected to be an IP or hostname plus port combination) every Interval.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-ttl"}},[t._v("ttl")])]),t._v(" "),e("td",[t._v("Specifies this is a TTL check, and the TTL endpoint must be used periodically to update the state of the check.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-serviceid"}},[t._v("serviceID")])]),t._v(" "),e("td",[t._v("Specifies the ID of a service to associate the registered check with an existing service provided by the agent.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload-status"}},[t._v("status")])]),t._v(" "),e("td",[t._v("Initial status of the health check.")])])])]),t._v(" "),e("h3",{attrs:{id:"agentcheckregisterpayload-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-name"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::name")]),t._v(" "),e("p",[t._v("Name of the check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-id"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::id")]),t._v(" "),e("p",[t._v("Unique ID for this check on the node.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-interval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-interval"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::interval")]),t._v(" "),e("p",[t._v("Frequency at which to run this check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" interval"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Interval"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-notes"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::notes")]),t._v(" "),e("p",[t._v("Arbitrary information.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" notes"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Notes"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-deregistercriticalserviceafter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-deregistercriticalserviceafter"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::deregisterCriticalServiceAfter")]),t._v(" "),e("p",[t._v("Specifies that checks associated with a service should deregister after this time.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deregisterCriticalServiceAfter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DeregisterCriticalServiceAfter"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-args"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::args")]),t._v(" "),e("p",[t._v("Command arguments to run to update the status of the check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Args"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-dockercontainerid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-dockercontainerid"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::dockerContainerID")]),t._v(" "),e("p",[t._v("Specifies that the check is a Docker check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dockerContainerID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DockerContainerID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-grpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-grpc"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::grpc")]),t._v(" "),e("p",[t._v("Specifies a gRPC check's endpoint that supports the standard "),e("a",{attrs:{href:"https://github.com/grpc/grpc/blob/master/doc/health-checking.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC health checking protocol"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grpc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GRPC"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-grpcusetls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-grpcusetls"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::grpcUseTLS")]),t._v(" "),e("p",[t._v("Set "),e("code",[t._v("true")]),t._v("to use TLS for this gRPC health check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grpcUseTLS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GRPCUseTLS"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-http"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::http")]),t._v(" "),e("p",[t._v("HTTP check's endpoint. Default Method is GET.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-method"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-method"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::method")]),t._v(" "),e("p",[t._v("Specifies a different HTTP method to be used for an HTTP check. If not specified GET is used.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" method"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Method"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-header"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-header"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::header")]),t._v(" "),e("p",[t._v("Set of headers that should be set for HTTP checks.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" header"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Header"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-timeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-timeout"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::timeout")]),t._v(" "),e("p",[t._v("Timeout for outgoing connections")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Timeout"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-tlsskipverify"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-tlsskipverify"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::tlsSkipVerify")]),t._v(" "),e("p",[t._v("Specifies if the certificate for an HTTPS check should not be verified.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tlsSkipVerify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TLSSkipVerify"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-tcp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-tcp"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::tcp")]),t._v(" "),e("p",[t._v("Specifies a TCP to connect against the value of TCP (expected to be an IP or hostname plus port combination) every Interval.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tcp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TCP"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-ttl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-ttl"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::ttl")]),t._v(" "),e("p",[t._v("Specifies this is a TTL check, and the TTL endpoint must be used periodically to update the state of the check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ttl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TTL"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-serviceid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-serviceid"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::serviceID")]),t._v(" "),e("p",[t._v("Specifies the ID of a service to associate the registered check with an existing service provided by the agent.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentcheckregisterpayload-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentcheckregisterpayload-status"}},[t._v("#")]),t._v(" AgentCheckRegisterPayload::status")]),t._v(" "),e("p",[t._v("Initial status of the health check.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Status"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"agentserviceregisterpayload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload")]),t._v(" "),e("p",[t._v("DTO Object representing Consul Agent Register Service."),e("br"),t._v(" For more information see "),e("a",{attrs:{href:"https://www.consul.io/api/agent/service.html#register-service",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Agent Register Service"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AgentServiceRegisterPayload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields-3"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-name"}},[t._v("name")])]),t._v(" "),e("td",[t._v("Logical name of the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-id"}},[t._v("id")])]),t._v(" "),e("td",[t._v("Unique ID for this service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("List<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-tags"}},[t._v("tags")])]),t._v(" "),e("td",[t._v("List of tags to assign to the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-address"}},[t._v("address")])]),t._v(" "),e("td",[t._v("Specifies the address of the service. If not provided, the agent's address is used as the address for the service during DNS queries.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-meta"}},[t._v("meta")])]),t._v(" "),e("td",[t._v("Specifies arbitrary KV metadata linked to the service instance.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-port"}},[t._v("port")])]),t._v(" "),e("td",[t._v("Port of the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-kind"}},[t._v("kind")])]),t._v(" "),e("td",[t._v('The kind of service. Defaults to "" which is a typical Consul service. This value may also be "connect-proxy" for services that are Connect-capable proxies representing another service.')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-proxydestination"}},[t._v("proxyDestination")])]),t._v(" "),e("td",[t._v("Deprecated.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Object<AgentCheckRegisterPayload>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-check"}},[t._v("check")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentcheckregisterpayload"}},[t._v("AgentCheckRegisterPayload")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("List<Object<AgentCheckRegisterPayload>>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-checks"}},[t._v("checks")])]),t._v(" "),e("td",[t._v("List of "),e("a",{attrs:{href:"#agentcheckregisterpayload"}},[t._v("AgentCheckRegisterPayload")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Boolean")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#agentserviceregisterpayload-enabletagoverride"}},[t._v("enableTagOverride")])]),t._v(" "),e("td",[t._v("Specifies to disable the anti-entropy feature for this service's tags.")])])])]),t._v(" "),e("h3",{attrs:{id:"agentserviceregisterpayload-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-name"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::name")]),t._v(" "),e("p",[t._v("Logical name of the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-id"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::id")]),t._v(" "),e("p",[t._v("Unique ID for this service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-tags"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::tags")]),t._v(" "),e("p",[t._v("List of tags to assign to the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tags"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-address"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::address")]),t._v(" "),e("p",[t._v("Specifies the address of the service. If not provided, the agent's address is used as the address for the service during DNS queries.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-meta"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-meta"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::meta")]),t._v(" "),e("p",[t._v("Specifies arbitrary KV metadata linked to the service instance.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" meta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Meta"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-port"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::port")]),t._v(" "),e("p",[t._v("Port of the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Port"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-kind"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-kind"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::kind")]),t._v(" "),e("p",[t._v('The kind of service. Defaults to "" which is a typical Consul service. This value may also be "connect-proxy" for services that are Connect-capable proxies representing another service.')]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kind"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Kind"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-proxydestination"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-proxydestination"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::proxyDestination")]),t._v(" "),e("p",[t._v("Deprecated.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" proxyDestination"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ProxyDestination"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-check"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-check"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::check")]),t._v(" "),e("p",[e("a",{attrs:{href:"#agentcheckregisterpayload"}},[t._v("AgentCheckRegisterPayload")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AgentCheckRegisterPayload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" check"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Check"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-checks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-checks"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::checks")]),t._v(" "),e("p",[t._v("List of "),e("a",{attrs:{href:"#agentcheckregisterpayload"}},[t._v("AgentCheckRegisterPayload")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AgentCheckRegisterPayload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" checks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Checks"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"agentserviceregisterpayload-enabletagoverride"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#agentserviceregisterpayload-enabletagoverride"}},[t._v("#")]),t._v(" AgentServiceRegisterPayload::enableTagOverride")]),t._v(" "),e("p",[t._v("Specifies to disable the anti-entropy feature for this service's tags.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enableTagOverride"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"EnableTagOverride"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"sessionpayload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload"}},[t._v("#")]),t._v(" SessionPayload")]),t._v(" "),e("p",[t._v("DTO Object representing Consul Agent Session."),e("br"),t._v(" For more information see "),e("a",{attrs:{href:"https://www.consul.io/api/session.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Session HTTP Endpoint"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SessionPayload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields-4"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("Int64")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-createindex"}},[t._v("createIndex")])]),t._v(" "),e("td",[t._v("Internal index value that represents when the entry was created.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-id"}},[t._v("id")])]),t._v(" "),e("td",[t._v("id.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int64")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-lockdelay"}},[t._v("lockDelay")])]),t._v(" "),e("td",[t._v("The duration for the lock delay. This must be greater than 0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-node"}},[t._v("node")])]),t._v(" "),e("td",[t._v("The name of the node. This must refer to a node that is already registered.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-name"}},[t._v("name")])]),t._v(" "),e("td",[t._v("A human-readable name for the session.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("List<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-cheks"}},[t._v("cheks")])]),t._v(" "),e("td",[t._v("A list of associated health check IDs (commonly CheckID in API responses).")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-behavior"}},[t._v("behavior")])]),t._v(" "),e("td",[t._v("Controls the behavior to take when a session is invalidated. Valid values are: "),e("br"),t._v(" "),e("ul",[e("li",[t._v("release - causes any locks that are held to be released")]),t._v(" "),e("li",[t._v("delete - causes any locks that are held to be deleted")])])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#sessionpayload-ttl"}},[t._v("ttl")])]),t._v(" "),e("td",[t._v("The number of seconds (between 10s and 86400s).")])])])]),t._v(" "),e("h3",{attrs:{id:"sessionpayload-createindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-createindex"}},[t._v("#")]),t._v(" SessionPayload::createIndex")]),t._v(" "),e("p",[t._v("Internal index value that represents when the entry was created.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CreateIndex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-id"}},[t._v("#")]),t._v(" SessionPayload::id")]),t._v(" "),e("p",[t._v("id.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-lockdelay"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-lockdelay"}},[t._v("#")]),t._v(" SessionPayload::lockDelay")]),t._v(" "),e("p",[t._v("The duration for the lock delay. This must be greater than 0")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lockDelay"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LockDelay"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-node"}},[t._v("#")]),t._v(" SessionPayload::node")]),t._v(" "),e("p",[t._v("The name of the node. This must refer to a node that is already registered.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-name"}},[t._v("#")]),t._v(" SessionPayload::name")]),t._v(" "),e("p",[t._v("A human-readable name for the session.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-cheks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-cheks"}},[t._v("#")]),t._v(" SessionPayload::cheks")]),t._v(" "),e("p",[t._v("A list of associated health check IDs (commonly CheckID in API responses).")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cheks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Checks"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-behavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-behavior"}},[t._v("#")]),t._v(" SessionPayload::behavior")]),t._v(" "),e("p",[t._v("Controls the behavior to take when a session is invalidated. Valid values are: "),e("br"),t._v(" "),e("ul",[e("li",[t._v("release - causes any locks that are held to be released")]),t._v(" "),e("li",[t._v("delete - causes any locks that are held to be deleted")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" behavior"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Behavior"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"sessionpayload-ttl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sessionpayload-ttl"}},[t._v("#")]),t._v(" SessionPayload::ttl")]),t._v(" "),e("p",[t._v("The number of seconds (between 10s and 86400s).")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ttl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TTL"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"serviceaddresspayload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serviceaddresspayload"}},[t._v("#")]),t._v(" ServiceAddressPayload")]),t._v(" "),e("p",[t._v("The structure representing LAN and WAN addresses for the service instance.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceAddressPayload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields-5"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#serviceaddresspayload-address"}},[t._v("address")])]),t._v(" "),e("td",[t._v("IP address.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#serviceaddresspayload-port"}},[t._v("port")])]),t._v(" "),e("td",[t._v("Port.")])])])]),t._v(" "),e("h3",{attrs:{id:"serviceaddresspayload-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serviceaddresspayload-address"}},[t._v("#")]),t._v(" ServiceAddressPayload::address")]),t._v(" "),e("p",[t._v("IP address.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"serviceaddresspayload-port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#serviceaddresspayload-port"}},[t._v("#")]),t._v(" ServiceAddressPayload::port")]),t._v(" "),e("p",[t._v("Port.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Port"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"catalogservicepayload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload"}},[t._v("#")]),t._v(" CatalogServicePayload")]),t._v(" "),e("p",[t._v("DTO Object representing Consul Catalog Service."),e("br"),t._v(" For more information see "),e("a",{attrs:{href:"https://www.consul.io/api/catalog.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Consul Catalog HTTP API"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" rest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CatalogServicePayload")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("DTO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"fields-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fields-6"}},[t._v("#")]),t._v(" Fields")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-id"}},[t._v("id")])]),t._v(" "),e("td",[t._v("ID.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-node"}},[t._v("node")])]),t._v(" "),e("td",[t._v("The name of the Consul node on which the service is registered.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-address"}},[t._v("address")])]),t._v(" "),e("td",[t._v("The IP address of the Consul node on which the service is registered.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-datacenter"}},[t._v("datacenter")])]),t._v(" "),e("td",[t._v("The data center of the Consul node on which the service is registered.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-taggedaddresses"}},[t._v("taggedAddresses")])]),t._v(" "),e("td",[t._v("The list of explicit LAN and WAN IP addresses for the agent.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-nodemeta"}},[t._v("nodeMeta")])]),t._v(" "),e("td",[t._v("The list of user-defined metadata key/value pairs for the node.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-serviceid"}},[t._v("serviceId")])]),t._v(" "),e("td",[t._v("The unique service instance identifier")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-servicename"}},[t._v("serviceName")])]),t._v(" "),e("td",[t._v("The name of the service")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-serviceaddress"}},[t._v("serviceAddress")])]),t._v(" "),e("td",[t._v("The IP address of the service host — if empty, node address should be used")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<Object<ServiceAddressPayload>>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-servicetaggedaddresses"}},[t._v("serviceTaggedAddresses")])]),t._v(" "),e("td",[t._v("The map of explicit LAN and WAN addresses for the service instance. "),e("a",{attrs:{href:"#serviceaddresspayload"}},[t._v("ServiceAddressPayload")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("List<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-servicetags"}},[t._v("serviceTags")])]),t._v(" "),e("td",[t._v("The list of tags for the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Fields<String>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-servicemeta"}},[t._v("serviceMeta")])]),t._v(" "),e("td",[t._v("The list of user-defined metadata key/value pairs for the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int32")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-serviceport"}},[t._v("servicePort")])]),t._v(" "),e("td",[t._v("The the port number of the service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Object<WeightsPayload>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-serviceweights"}},[t._v("serviceWeights")])]),t._v(" "),e("td",[t._v("ServiceWeights.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Boolean")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-serviceenabletagoverride"}},[t._v("serviceEnableTagOverride")])]),t._v(" "),e("td",[t._v("Indicates whether service tags can be overridden on this service.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Int64")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#catalogservicepayload-createindex"}},[t._v("createIndex")])]),t._v(" "),e("td",[t._v("Internal index value that represents when the entry was created.")])])])]),t._v(" "),e("h3",{attrs:{id:"catalogservicepayload-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-id"}},[t._v("#")]),t._v(" CatalogServicePayload::id")]),t._v(" "),e("p",[t._v("ID.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-node"}},[t._v("#")]),t._v(" CatalogServicePayload::node")]),t._v(" "),e("p",[t._v("The name of the Consul node on which the service is registered.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-address"}},[t._v("#")]),t._v(" CatalogServicePayload::address")]),t._v(" "),e("p",[t._v("The IP address of the Consul node on which the service is registered.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-datacenter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-datacenter"}},[t._v("#")]),t._v(" CatalogServicePayload::datacenter")]),t._v(" "),e("p",[t._v("The data center of the Consul node on which the service is registered.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" datacenter"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Datacenter"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-taggedaddresses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-taggedaddresses"}},[t._v("#")]),t._v(" CatalogServicePayload::taggedAddresses")]),t._v(" "),e("p",[t._v("The list of explicit LAN and WAN IP addresses for the agent.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" taggedAddresses"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TaggedAddresses"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-nodemeta"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-nodemeta"}},[t._v("#")]),t._v(" CatalogServicePayload::nodeMeta")]),t._v(" "),e("p",[t._v("The list of user-defined metadata key/value pairs for the node.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nodeMeta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NodeMeta"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-serviceid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-serviceid"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceId")]),t._v(" "),e("p",[t._v("The unique service instance identifier")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceID"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-servicename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-servicename"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceName")]),t._v(" "),e("p",[t._v("The name of the service")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceName"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-serviceaddress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-serviceaddress"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceAddress")]),t._v(" "),e("p",[t._v("The IP address of the service host — if empty, node address should be used")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceAddress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceAddress"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-servicetaggedaddresses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-servicetaggedaddresses"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceTaggedAddresses")]),t._v(" "),e("p",[t._v("The map of explicit LAN and WAN addresses for the service instance. "),e("a",{attrs:{href:"#serviceaddresspayload"}},[t._v("ServiceAddressPayload")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ServiceAddressPayload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceTaggedAddresses"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceTaggedAddresses"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-servicetags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-servicetags"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceTags")]),t._v(" "),e("p",[t._v("The list of tags for the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceTags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceTags"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-servicemeta"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-servicemeta"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceMeta")]),t._v(" "),e("p",[t._v("The list of user-defined metadata key/value pairs for the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Fields"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceMeta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceMeta"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-serviceport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-serviceport"}},[t._v("#")]),t._v(" CatalogServicePayload::servicePort")]),t._v(" "),e("p",[t._v("The the port number of the service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" servicePort"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServicePort"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-serviceweights"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-serviceweights"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceWeights")]),t._v(" "),e("p",[t._v("ServiceWeights.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WeightsPayload"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceWeights"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceWeights"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-serviceenabletagoverride"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-serviceenabletagoverride"}},[t._v("#")]),t._v(" CatalogServicePayload::serviceEnableTagOverride")]),t._v(" "),e("p",[t._v("Indicates whether service tags can be overridden on this service.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serviceEnableTagOverride"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ServiceEnableTagOverride"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"catalogservicepayload-createindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#catalogservicepayload-createindex"}},[t._v("#")]),t._v(" CatalogServicePayload::createIndex")]),t._v(" "),e("p",[t._v("Internal index value that represents when the entry was created.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DTO_FIELD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Int64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" createIndex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CreateIndex"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);