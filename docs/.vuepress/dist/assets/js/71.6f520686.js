(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{338:function(e,t,s){"use strict";s.r(t);var a=s(0),i=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"base-define-hpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base-define-hpp","aria-hidden":"true"}},[e._v("#")]),e._v(" base_define.hpp"),s("seo")],1),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/codegen/dto/base_define.hpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("This File On Github"),s("OutboundLink")],1),s("br"),e._v(" "),s("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/codegen/dto/base_define.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ask A Question"),s("OutboundLink")],1)]),e._v(" "),e._m(0),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("API: latest")]),t("br"),this._v(" "),t("code",[this._v("module: oatpp")]),t("br"),this._v(" "),t("code",[this._v('#include "oatpp/codegen/dto/base_define.hpp"')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"dto-init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dto-init","aria-hidden":"true"}},[this._v("#")]),this._v(" DTO_INIT")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Codegen macoro to be used in classes extending oatpp::data::mapping::type::Object to generate required fields/methods/constructors for DTO object. "),t("ul",[t("li",[t("strong",[this._v("@param")]),this._v(" TYPE_NAME - name of the DTO class. ")]),t("li",[t("strong",[this._v("@param")]),this._v(" TYPE_EXTEND - name of the parent DTO class. If DTO extends oatpp::data::mapping::type::Object TYPE_EXETENDS should be "),t("code",[this._v("Object")]),this._v(". ")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[this._v("#"),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[this._v("define")]),this._v(" DTO_INIT(TYPE_NAME, TYPE_EXTEND)")]),this._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"dto-field"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dto-field","aria-hidden":"true"}},[this._v("#")]),this._v(" DTO_FIELD")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Codegen macro to generate fields of DTO object. "),t("ul",[t("li",[t("strong",[this._v("@param")]),this._v(" TYPE - type of the field. ")]),t("li",[t("strong",[this._v("@param")]),this._v(" NAME - name of the field. ")]),t("li",[t("strong",[this._v("@param")]),this._v(" QUALIFIER_NAME - additional (optional) field to specify serialized name of the field. If not specified it will be same as NAME. ")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-cpp extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[this._v("#"),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[this._v("define")]),this._v(" DTO_FIELD(TYPE, ...)")]),this._v("\n")])])])}],!1,null,null,null);t.default=i.exports}}]);