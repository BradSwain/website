(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{240:function(e,t,s){"use strict";s.r(t);var a=s(0),i=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"example-hls-media-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-hls-media-stream","aria-hidden":"true"}},[e._v("#")]),e._v(" Example-HLS-Media-Stream "),s("seo")],1),e._v(" "),e._m(0),e._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/oatpp/example-hls-media-stream",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github Repo"),s("OutboundLink")],1)])]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),s("p",[e._v("Server is built using oat++ Async-Api and has following endpoints:")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._m(6),e._m(7),e._v(" "),e._m(8),e._v(" "),e._m(9),e._m(10),e._v(" "),e._m(11),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),e._m(18)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Example project how-to build HLS-streaming server using oat++ Async-API.\n"),t("em",[this._v("Live stream tested with Safari-Browser and VLC-player.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[this._v("#")]),this._v(" Overview")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Server generates infinite .m3u8 playlist from the pre-generated\n"),s("code",[e._v("playlist_live.m3u8")]),e._v(" file in the "),s("code",[e._v("video")]),e._v(" folder.\nFile "),s("code",[e._v("video/playlist_live.m3u8")]),e._v(" together with video chunks is generated using "),s("code",[e._v("ffmpeg")]),e._v(".")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("code",[e._v('("GET", "/", Root)')]),e._v(" - Starting html-page aka index.html")]),e._v(" "),s("li",[s("code",[e._v('("GET", "video/*", Video)')]),e._v(" - Embedded video html-page")]),e._v(" "),s("li",[s("code",[e._v('("GET", "media/live", Live)')]),e._v(" - Infinite HLS playlist for live-stream describing video chunks")]),e._v(" "),s("li",[s("code",[e._v('("GET", "media/*", Static)')]),e._v(" - Endpoint serving media files with range requests support")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"project-layout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-layout","aria-hidden":"true"}},[this._v("#")]),this._v(" Project layout")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("\n|- CMakeLists.txt              // project loader script. load and build dependencies\n|- main/                       // main project directory\n|    |\n|    |- CMakeLists.txt         // projects CMakeLists.txt\n|    |- src/                   // source folder\n|    |- test/                  // test folder\n|\n|- video/                      // media files and playlists here\n     |- generate_pls.sh        // example how to use ```ffmpeg``` to generate initial playlist and video chunks\n     |- playlist_live.m3u8     // playlist used to generate infinite playlist for http-live-streaming\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("- src/\n    |\n    |- controller/              // Folder containing UserController where all endpoints are declared\n    |- hls/                     // Playlist generator is here\n    |- Utils.hpp                // Utils\n    |- AppComponent.hpp         // Service config\n    |- Logger.hpp               // Application Logger\n    |- App.cpp                  // main() is here\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"build-and-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-and-run","aria-hidden":"true"}},[this._v("#")]),this._v(" Build and Run")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"using-cmake"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-cmake","aria-hidden":"true"}},[this._v("#")]),this._v(" Using CMake")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" build "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("cd")]),e._v(" build\n$ cmake "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" run        "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("## Download, build, and install all dependencies. Run project")]),e._v("\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"in-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-docker","aria-hidden":"true"}},[this._v("#")]),this._v(" In Docker")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("$ docker build -t example-hls "),t("span",{pre:!0,attrs:{class:"token keyword"}},[this._v(".")]),this._v("\n$ docker run -p 8000:8000 -t example-hls\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"notes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#notes","aria-hidden":"true"}},[this._v("#")]),this._v(" Notes")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"urls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#urls","aria-hidden":"true"}},[this._v("#")]),this._v(" Urls")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("localhost:8000 - Index page")]),this._v(" "),t("li",[this._v("localhost:8000/media/live - Live stream made from {repo}/video/video1.mp4 and {repo}/video/video2.mp4 played in the loop")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#files","aria-hidden":"true"}},[this._v("#")]),this._v(" Files")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("code",[e._v("{repo}/video/playlist_live.m3u8")]),e._v(" - playlist used for live HLS streaming")]),e._v(" "),s("li",[s("code",[e._v("{repo}/video/generate_pls.sh")]),e._v(" - example script used to generate sub-playlists and video fragments using ffmpeg tool. "),s("code",[e._v("#EXTINF")]),e._v(" sections of sub-playlists then have to be manually moved to "),s("code",[e._v("playlist_live.m3u8")]),e._v(".")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"note"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#note","aria-hidden":"true"}},[this._v("#")]),this._v(" Note")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If app can't find playlist of video files then specify full-file-paths for "),t("code",[this._v("{repo}/video/playlist_live.m3u8")]),this._v(" file and "),t("code",[this._v("{repo}/video")]),this._v(" folder in "),t("code",[this._v("AppComponent.hpp")])])}],!1,null,null,null);t.default=i.exports}}]);