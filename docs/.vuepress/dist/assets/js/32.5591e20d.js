(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{404:function(t,e,r){"use strict";r.r(e);var n=r(42),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"connectionprovider-hpp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-hpp"}},[t._v("#")]),t._v(" ConnectionProvider.hpp"),r("seo")],1),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/oatpp/oatpp-mbedtls/blob/master/src/oatpp-mbedtls/client/ConnectionProvider.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://github.com/oatpp/oatpp-mbedtls/issues/new?title=API%20question&body=In%20file:%20oatpp-mbedtls/client/ConnectionProvider.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("API: latest")]),r("br"),t._v(" "),r("code",[t._v("module: oatpp-mbedtls")]),r("br"),t._v(" "),r("code",[t._v('#include "oatpp-mbedtls/client/ConnectionProvider.hpp"')])]),t._v(" "),r("h2",{attrs:{id:"connectionprovider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider"}},[t._v("#")]),t._v(" ConnectionProvider")]),t._v(" "),r("p",[t._v("MbedTLS client connection provider. Extends "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/Countable/#countable"}},[t._v("oatpp::base::Countable")]),t._v(", "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionProvider/#clientconnectionprovider"}},[t._v("oatpp::network::ClientConnectionProvider")]),t._v(".")],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mbedtls "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" client "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConnectionProvider")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("base"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Countable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("network"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ClientConnectionProvider "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Return Type")]),t._v(" "),r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Summary")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("[none]")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-connectionprovider"}},[t._v("ConnectionProvider")])]),t._v(" "),r("td",[t._v("Constructor.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<ConnectionProvider>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-createshared"}},[t._v("createShared")])]),t._v(" "),r("td",[t._v("Multiple implementations: "),r("br"),r("ol",[r("li",[t._v("Create shared ConnectionProvider. ")]),r("li",[t._v("Create shared ConnectionProvider using "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/client/SimpleTCPConnectionProvider/#simpletcpconnectionprovider"}},[t._v("oatpp::network::client::SimpleTCPConnectionProvider")])],1)])])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-close"}},[t._v("close")])]),t._v(" "),r("td",[t._v("Implements oatpp::network::ConnectionProvider::close. Here does nothing.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<IOStream>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-getconnection"}},[t._v("getConnection")])]),t._v(" "),r("td",[t._v("Get connection.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("oatpp::async::CoroutineStarterForResult<const std::shared_ptr<oatpp::data::stream::IOStream>&>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-getconnectionasync"}},[t._v("getConnectionAsync")])]),t._v(" "),r("td",[t._v("Get connection in asynchronous manner.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#connectionprovider-invalidateconnection"}},[t._v("invalidateConnection")])]),t._v(" "),r("td",[t._v("Will call "),r("code",[t._v("invalidateConnection()")]),t._v(" for the underlying transport stream.")])])])]),t._v(" "),r("h3",{attrs:{id:"connectionprovider-connectionprovider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-connectionprovider"}},[t._v("#")]),t._v(" ConnectionProvider::ConnectionProvider")]),t._v(" "),r("p",[t._v("Constructor. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" config - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp-mbedtls/Config/#config"}},[t._v("oatpp::mbedtls::Config")]),t._v(". ")],1),r("li",[r("strong",[t._v("@param")]),t._v(" streamProvider - provider of underlying transport stream. "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionProvider/#clientconnectionprovider"}},[t._v("oatpp::network::ClientConnectionProvider")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ConnectionProvider")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Config"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("network"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ClientConnectionProvider"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" streamProvider"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"connectionprovider-createshared"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-createshared"}},[t._v("#")]),t._v(" ConnectionProvider::createShared")]),t._v(" "),r("ol",[r("li",[t._v("Create shared ConnectionProvider. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" config - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp-mbedtls/Config/#config"}},[t._v("oatpp::mbedtls::Config")]),t._v(". ")],1),r("li",[r("strong",[t._v("@param")]),t._v(" streamProvider - provider of underlying transport stream. "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionProvider/#clientconnectionprovider"}},[t._v("oatpp::network::ClientConnectionProvider")]),t._v(". ")],1),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("code",[t._v("std::shared_ptr")]),t._v(" to ConnectionProvider. ")])]),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionProvider"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShared")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Config"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                                        "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("network"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ClientConnectionProvider"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" streamProvider"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),r("li",[t._v("Create shared ConnectionProvider using "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/client/SimpleTCPConnectionProvider/#simpletcpconnectionprovider"}},[t._v("oatpp::network::client::SimpleTCPConnectionProvider")]),t._v(" as a provider of underlying transport stream. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" config - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp-mbedtls/Config/#config"}},[t._v("oatpp::mbedtls::Config")]),t._v(". ")],1),r("li",[r("strong",[t._v("@param")]),t._v(" host - host. ")]),r("li",[r("strong",[t._v("@param")]),t._v(" port - port. ")]),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("code",[t._v("std::shared_ptr")]),t._v(" to ConnectionProvider. ")])]),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ConnectionProvider"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShared")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Config"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" host"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_uint16 port"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])],1)]),t._v(" "),r("h3",{attrs:{id:"connectionprovider-close"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-close"}},[t._v("#")]),t._v(" ConnectionProvider::close")]),t._v(" "),r("p",[t._v("Implements oatpp::network::ConnectionProvider::close. Here does nothing.")]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),r("h3",{attrs:{id:"connectionprovider-getconnection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-getconnection"}},[t._v("#")]),t._v(" ConnectionProvider::getConnection")]),t._v(" "),r("p",[t._v("Get connection. "),r("ul",[r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("code",[t._v("std::shared_ptr")]),t._v(" to "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#iostream"}},[t._v("oatpp::data::stream::IOStream")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[t._v("std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IOStream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnection")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),r("h3",{attrs:{id:"connectionprovider-getconnectionasync"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-getconnectionasync"}},[t._v("#")]),t._v(" ConnectionProvider::getConnectionAsync")]),t._v(" "),r("p",[t._v("Get connection in asynchronous manner. "),r("ul",[r("li",[r("strong",[t._v("@return")]),t._v(" - oatpp::async::CoroutineStarterForResult. ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarterForResult"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("data"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IOStream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnectionAsync")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),r("h3",{attrs:{id:"connectionprovider-invalidateconnection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#connectionprovider-invalidateconnection"}},[t._v("#")]),t._v(" ConnectionProvider::invalidateConnection")]),t._v(" "),r("p",[t._v("Will call "),r("code",[t._v("invalidateConnection()")]),t._v(" for the underlying transport stream. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" connection - "),r("strong",[t._v("MUST")]),t._v(" be an instance of "),r("RouterLink",{attrs:{to:"/api/latest/oatpp-mbedtls/Connection/#connection"}},[t._v("oatpp::mbedtls::Connection")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("invalidateConnection")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IOStream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connection"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);